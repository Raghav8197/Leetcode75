class Trie:

    def __init__(self):
        self.root = {}
        

    def insert(self, word: str) -> None:
        node=self.root
        for w in word:
            if w not in node:
                node[w] = {}
            node = node[w]
        node["."] = {}
        

    def search(self, word: str) -> bool:
        traversed = Trie.traverse(word, self.root)
        return traversed and "." in traversed
        

    def startsWith(self, prefix: str) -> bool:
        traversed = Trie.traverse(prefix, self.root)
        return traversed

    def traverse(word: str, node: {}) -> {}:
        for w in word:
            if w in node:
                node = node[w]
            else:
                return None
        return node
        


# Your Trie object will be instantiated and called as such:
# obj = Trie()
# obj.insert(word)
# param_2 = obj.search(word)
# param_3 = obj.startsWith(prefix)
